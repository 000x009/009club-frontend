services:
  nginx:
    image: nginx:stable-alpine
    user: root
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - "/etc/letsencrypt:/etc/letsencrypt"
    depends_on:
      - frontend
    networks:
      - default
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    restart: on-failure
    networks:
      - default

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: on-failure
    networks:
      - default

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:5173"
    env_file:
      - ./client/.env
    networks:
      - default

  support_bot:
    build:
      context: ./support_bot
      dockerfile: Dockerfile.support
    env_file:
      - ./support_bot/.env
    depends_on:
      - database
      - redis
    restart: on-failure
    command: sh -c "alembic upgrade head && python -m src.app.main.main"
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
    driver: bridge


